version: '3.8'

services:
  # SonarQube
  sonarqube:
    image: sonarqube:lts
    container_name: sonarqube
    depends_on:
      - sonarqube-db
    environment:
      - SONAR_JDBC_URL=jdbc:postgresql://sonarqube-db:5432/sonar
      - SONAR_JDBC_USERNAME=sonar
      - SONAR_JDBC_PASSWORD=sonar
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ports:
      - "9000:9000"
    networks:
      - mrchef-network
  
  # Base de datos PostgreSQL para SonarQube
  sonarqube-db:
    image: postgres:13
    container_name: sonarqube-db
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonarqube_db:/var/lib/postgresql/data
    networks:
      - mrchef-network
  
  # Backend
  backend:
    build: 
      context: ./MrChef-Backend
      dockerfile: Dockerfile
    container_name: mrchef-backend
    ports:
      - "8080:8080"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:3306/mrchef
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=Freya-100MTH
      - MYSQL_HOST=host.docker.internal
      - JWT_SECRET_KEY=TuClaveSecretaMuySeguraAquiEnVariableDeEntorno
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mrchef-network

  # Frontend
  frontend:
    build: 
      context: ./MrChef-FrontEnd
      dockerfile: Dockerfile
    container_name: mrchef-frontend
    ports:
      - "8081:8081"
    environment:
      - BACKEND_URL=http://backend:8080
    depends_on:
      - backend
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - mrchef-network

networks:
  mrchef-network:
    driver: bridge

volumes:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  sonarqube_db:
  dependency-check-data: